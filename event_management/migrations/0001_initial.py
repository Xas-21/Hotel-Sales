# Generated by Django 5.2.6 on 2025-10-06 15:31

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0008_alter_account_account_type'),
        ('requests', '0019_add_actual_status'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MeetingRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Room name (e.g., IKMA, Board Room)', max_length=50, unique=True)),
                ('display_name', models.CharField(help_text='Display name for the room', max_length=100)),
                ('room_type', models.CharField(choices=[('combined', 'Combined Room (Main Halls)'), ('separate', 'Separate Room')], default='separate', max_length=20)),
                ('capacity', models.PositiveIntegerField(default=50, help_text='Maximum capacity')),
                ('is_combined', models.BooleanField(default=False, help_text='Can be combined with other rooms')),
                ('combined_group', models.CharField(blank=True, help_text='Group for combined rooms (main_halls)', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Available for booking')),
                ('description', models.TextField(blank=True, help_text='Room description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Meeting Room',
                'verbose_name_plural': 'Meeting Rooms',
                'ordering': ['room_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='EventMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Metrics date')),
                ('total_events', models.PositiveIntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_attendees', models.PositiveIntegerField(default=0)),
                ('room_utilization', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('ikma_events', models.PositiveIntegerField(default=0)),
                ('hegra_events', models.PositiveIntegerField(default=0)),
                ('dadan_events', models.PositiveIntegerField(default=0)),
                ('aljadida_events', models.PositiveIntegerField(default=0)),
                ('board_room_events', models.PositiveIntegerField(default=0)),
                ('al_badia_events', models.PositiveIntegerField(default=0)),
                ('la_palma_events', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Event Metrics',
                'verbose_name_plural': 'Event Metrics',
                'ordering': ['-date'],
                'unique_together': {('date',)},
            },
        ),
        migrations.CreateModel(
            name='EventBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(help_text='Event name', max_length=200)),
                ('event_date', models.DateField(help_text='Event date')),
                ('start_time', models.TimeField(help_text='Start time')),
                ('end_time', models.TimeField(help_text='End time')),
                ('status', models.CharField(choices=[('tentative', 'Tentative'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='tentative', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Additional notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(help_text='Account organizing the event', on_delete=django.db.models.deletion.CASCADE, to='accounts.account')),
                ('created_by', models.ForeignKey(help_text='User who created the booking', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('request', models.ForeignKey(blank=True, help_text='Linked request from admin panel', null=True, on_delete=django.db.models.deletion.CASCADE, to='requests.request')),
                ('meeting_rooms', models.ManyToManyField(help_text='Selected meeting rooms', to='event_management.meetingroom')),
            ],
            options={
                'verbose_name': 'Event Booking',
                'verbose_name_plural': 'Event Bookings',
                'ordering': ['event_date', 'start_time'],
                'unique_together': {('event_date', 'start_time', 'end_time')},
            },
        ),
    ]
